<Window x:Class="Sudoku.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Sudoku.Views"
        xmlns:vm="clr-namespace:Sudoku.ViewModels"
        xmlns:ot="clr-namespace:Sudoku.Other"
        mc:Ignorable="d"
        Title="Sudoku" Height="700" Width="1000"
        MinHeight="500" MinWidth="700"
        Background="{DynamicResource ColorPrimary}"
        MouseDown="Window_MouseDown"
        >

    <Window.Resources>
        <vm:Main x:Key="MainViewModel"/>

        <SolidColorBrush x:Key="ColorPrimary">#78909c</SolidColorBrush>
        <SolidColorBrush x:Key="ColorPrimaryLight">#a7c0cd</SolidColorBrush>
        <SolidColorBrush x:Key="ColorPrimaryDark">#4b636e</SolidColorBrush>

        <SolidColorBrush x:Key="ColorSecondary">#e57373</SolidColorBrush>
        <SolidColorBrush x:Key="ColorSecondaryLight">#ffa4a2</SolidColorBrush>
        <SolidColorBrush x:Key="ColorSecondaryDark">#af4448</SolidColorBrush>

        <Style TargetType="Button">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="DemiBold"/>

            <Setter Property="Focusable" Value="False"/>

            <Setter Property="Margin" Value="5,5,5,5"/>
            <Setter Property="Padding" Value="5,0,5,0"/>

            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="Height" Value="40"/>

            <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
            
            <!--https://stackoverflow.com/questions/17259280/how-do-you-change-background-for-a-button-mouseover-in-wpf-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{DynamicResource ColorSecondary}" BorderBrush="{DynamicResource ColorSecondaryDark}" BorderThickness="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <!--<Trigger Property="IsKeyboardFocused" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondaryDark}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondary}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>-->

                            <!--<Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                            </Trigger>-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontWeight" Value="DemiBold"/>

            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu Visibility="Collapsed" />
                </Setter.Value>
            </Setter>

            <Setter Property="CaretBrush" Value="Transparent"/>
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_KeyDown"/>
            <EventSetter Event="PreviewMouseDown" Handler="TextBox_PreviewMouseDown"/>

            <!--https://stackoverflow.com/questions/38536459/xaml-textbox-change-border-color-on-focus-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="Normal" TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{DynamicResource ColorPrimary}" Background="{DynamicResource ColorPrimaryLight}" BorderThickness="3">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsManipulationEnabled" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondaryDark}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="DemiBold"/>

            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>

            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>-->

            <!--<Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>-->
        </Style>

        <Style x:Key="LabelBorder" TargetType="Border">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Padding" Value="10,5,0,5"/>

            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorPrimaryDark}"/>
            <Setter Property="Background" Value="{DynamicResource ColorPrimaryLight}"/>
        </Style>

        <Style x:Key="PlayGrid" TargetType="Grid">
            <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>-->
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MaxWidth" Value="700"/>
        </Style>

        <Style x:Key="StepsGrid" TargetType="Grid">
            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="MaxHeight" Value="700"/>
        </Style>

        <!--<Style TargetType="ListBoxItem">
            <Setter Property="Background" Value="{StaticResource ColorSecondary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ColorSecondaryDark}"/>
            <Setter Property="BorderThickness" Value="2"/>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ColorSecondary}"/>
                    <Setter Property="Background" Value="{DynamicResource ColorSecondaryLight}" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ColorSecondaryDark}"/>
                    <Setter Property="Background" Value="{DynamicResource ColorSecondary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="Normal" TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="border" BorderBrush="{DynamicResource ColorPrimary}" Background="{DynamicResource ColorPrimaryLight}" BorderThickness="3">
                            <ContentPresenter x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondaryLight}" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorSecondaryDark}"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorSecondary}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ExitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

</Window>
